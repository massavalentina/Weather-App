{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows 10\\\\OneDrive\\\\Escritorio\\\\Weather-App\\\\project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Nav2 from './components/Nav2';\nimport Cards from './components/Cards.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n  const apiKey = '4ae2636d8dfbdc3044bede63951a019b';\n\n  function onSearch(ciudad) {\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`).then(r => r.json()).then(recurso => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon\n        };\n        setCities(oldCities => [...oldCities, ciudad]);\n      } else {\n        alert(\"Ciudad no encontrada\");\n      }\n    });\n  }\n\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id != id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav2, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      cities: cities,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Nav2","Cards","App","cities","setCities","apiKey","onSearch","ciudad","fetch","then","r","json","recurso","main","undefined","min","Math","round","temp_min","max","temp_max","img","weather","icon","id","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","oldCities","alert","onClose","filter","c"],"sources":["C:/Users/Windows 10/OneDrive/Escritorio/Weather-App/project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Nav2 from './components/Nav2'\r\nimport Cards from './components/Cards.jsx';\r\n\r\n\r\n\r\n\r\nexport default function App() {\r\n  const [cities, setCities] = useState([]);\r\n\r\n  const apiKey = '4ae2636d8dfbdc3044bede63951a019b'\r\n\r\n\r\n  function onSearch(ciudad) {\r\n\r\n   fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`)\r\n      .then(r => r.json())\r\n      .then((recurso) => {\r\n        if(recurso.main !== undefined){\r\n          const ciudad = {\r\n            min: Math.round(recurso.main.temp_min),\r\n            max: Math.round(recurso.main.temp_max),\r\n            img: recurso.weather[0].icon,\r\n            id: recurso.id,\r\n            wind: recurso.wind.speed,\r\n            temp: recurso.main.temp,\r\n            name: recurso.name,\r\n            weather: recurso.weather[0].main,\r\n            clouds: recurso.clouds.all,\r\n            latitud: recurso.coord.lat,\r\n            longitud: recurso.coord.lon\r\n          };\r\n\r\n          setCities(oldCities => [...oldCities, ciudad]);\r\n\r\n        } else {\r\n          alert(\"Ciudad no encontrada\");\r\n        }\r\n      });\r\n\r\n\r\n  \r\n  }\r\n\r\n\r\n function onClose(id){\r\n   setCities(oldCities => oldCities.filter(c => c.id != id) );\r\n\r\n }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <Nav2 onSearch={onSearch}/>\r\n        <Cards cities={cities} onClose={onClose}/>\r\n    </div>\r\n  );\r\n\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;AAKA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC5B,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;EAEA,MAAMM,MAAM,GAAG,kCAAf;;EAGA,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;IAEzBC,KAAK,CAAE,oDAAmDD,MAAO,UAASF,MAAO,eAA5E,CAAL,CACII,IADJ,CACSC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADd,EAEIF,IAFJ,CAEUG,OAAD,IAAa;MACjB,IAAGA,OAAO,CAACC,IAAR,KAAiBC,SAApB,EAA8B;QAC5B,MAAMP,MAAM,GAAG;UACbQ,GAAG,EAAEC,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACC,IAAR,CAAaK,QAAxB,CADQ;UAEbC,GAAG,EAAEH,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACC,IAAR,CAAaO,QAAxB,CAFQ;UAGbC,GAAG,EAAET,OAAO,CAACU,OAAR,CAAgB,CAAhB,EAAmBC,IAHX;UAIbC,EAAE,EAAEZ,OAAO,CAACY,EAJC;UAKbC,IAAI,EAAEb,OAAO,CAACa,IAAR,CAAaC,KALN;UAMbC,IAAI,EAAEf,OAAO,CAACC,IAAR,CAAac,IANN;UAObC,IAAI,EAAEhB,OAAO,CAACgB,IAPD;UAQbN,OAAO,EAAEV,OAAO,CAACU,OAAR,CAAgB,CAAhB,EAAmBT,IARf;UASbgB,MAAM,EAAEjB,OAAO,CAACiB,MAAR,CAAeC,GATV;UAUbC,OAAO,EAAEnB,OAAO,CAACoB,KAAR,CAAcC,GAVV;UAWbC,QAAQ,EAAEtB,OAAO,CAACoB,KAAR,CAAcG;QAXX,CAAf;QAcA/B,SAAS,CAACgC,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAe7B,MAAf,CAAd,CAAT;MAED,CAjBD,MAiBO;QACL8B,KAAK,CAAC,sBAAD,CAAL;MACD;IACF,CAvBJ;EA2BA;;EAGF,SAASC,OAAT,CAAiBd,EAAjB,EAAoB;IAClBpB,SAAS,CAACgC,SAAS,IAAIA,SAAS,CAACG,MAAV,CAAiBC,CAAC,IAAIA,CAAC,CAAChB,EAAF,IAAQA,EAA9B,CAAd,CAAT;EAED;;EAEA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACI,QAAC,IAAD;MAAM,QAAQ,EAAElB;IAAhB;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,KAAD;MAAO,MAAM,EAAEH,MAAf;MAAuB,OAAO,EAAEmC;IAAhC;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAlDuBpC,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}